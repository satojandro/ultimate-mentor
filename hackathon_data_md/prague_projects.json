[
  {
    "name": "Decycle",
    "tagline": "A smart trash can that automatically separates garbage and rewards users who recycle with tokens",
    "description": "We use face-based account abstraction so that people can throw away items without needing their phones. The smart bin automatically identifies and correctly separates the waste.\n\nUsers who want to collect garbage can check its estimated value and pay a fraction of it. This payment is then distributed among stakeholders.\n\nTo complete the account abstraction, we use VLayer email proof, an email-based zero-knowledge proof system. Our main smart contract is deployed on Flow, and we use LayerZero for cross-chain communication. Chain data is read using BlockScout.\n\nBusiness model:\nStakers fund the construction of new smart trash cans. These bins are deployed by us, and waste collectors are responsible for emptying them. Collectors can view the contents, purchase the waste at an affordable price, recycle it, and earn a profit. Payments made by collectors are automatically distributed among stakeholders.\n\nWe also introduce gamification mechanics to incentivize the deployment of more smart trash cans.\n\nRegular users can earn tokens and NFTs simply by throwing their waste into the bin. Their abstracted account is automatically charged.",
    "howItsMade": "We are using an NVIDIA Jetson Nano to develop the smart trash can. It handles image processing for both user recognition and waste classification. Additionally, microcontrollers are used to control the motors.\n\nFor the technical stack:\n\nWe use VLayer for zero-knowledge proof‚Äìbased account abstraction.\n\nFlow hosts the main smart contract.\n\nLayerZero enables cross-chain communication.\n\nBlockScout is used to visualize blockchain data.\n\nThe web app is built with Next.js, and all other components are developed in Python.\n\n",
    "githubUrl": "https://github.com/ETHGlobalPrague2025/Decycle",
    "projectUrl": "https://trashcan.0xshazam.xyz",
    "showcaseUrl": "https://ethglobal.com/showcase/decycle-ke8bj"
  },
  {
    "name": "CowDAO",
    "tagline": "Bet on real-world cows with dynamic NFTs, farm data, and prediction markets in the CowDAO universe.",
    "description": "CowDAO is a decentralized prediction market platform where users bet on real-world cow data. Participants buy Cow NFTs on Berachain, each linked to live dairy farm stats like milk yield, activity level, or breeding events. Farmers opt in by sharing IoT or verified third-party data (via Flare oracles), enabling tamper-proof, real-time updates.\n\nUsers can wager on outcomes like ‚ÄúWhich cow produces the most milk this week?‚Äù or ‚ÄúWhich calf is born first?‚Äù, using $FLR or $NECT. Rewards are distributed automatically via smart contracts, tracked transparently using Blockscout. CowDAO gamifies agriculture while driving engagement with real-world farm data and tokenized assets.\n\nThink of it as fantasy football meets DeFi, but with cows.",
    "howItsMade": "CowDAO is built as a full-stack Web3 application that connects real-world cow data with decentralized prediction markets. On the smart contract side, we deployed:\n\nMoogicMarket.sol: A custom Solidity contract supporting binary and multi-option prediction markets, using Flare's FDC for data feeds, RNG contracts for randomness, and tracking user Merits and bonus rewards.\n\nCowNFT.sol: An ERC-721 contract on Berachain, minting Cow NFTs tied to real-world data. Each Cow is linked to a vault using the Beraborrow protocol, allowing future DeFi functionality like collateralization.\n\nOn the frontend, we used:\n\nReact + Next.js with viem and wagmi for wallet interactions and smart contract calls.\n\nReal-time contract state and claim data is visualized through a leaderboard UI, betting dashboard, and NFT pages.\n\nBlockscout API is integrated to fetch and verify on-chain rewards and historical activity.\n\nIPFS metadata for NFTs was originally attempted with nft.storage and web3.storage, but due to API deprecations we pivoted to Filebase for uploading cow metadata (e.g., breed, milk output, temperament).\n\nHacky highlights:\n\nWe simulate live farm data by mapping IoT inputs like milk yield and cow activity through Flare‚Äôs FDC, enabling data-driven markets like ‚ÄúWhich cow will give the most milk today?‚Äù\n\nCow NFTs update visually or textually based on real-world outcomes (e.g. ‚ÄúüèÜTop Producer‚Äù).\n\nThe betting contract is multi-market capable, supports both binary and multi-outcome markets, and rewards the highest staker with a bonus.\n\nPartner tech stack used:\n\nFlare (FDC, RNG): for trustworthy real-world cow data and randomness.\n\nBerachain: as the NFT minting and future DeFi layer.\n\nBlockscout: for explorer tooling and user reward verification.",
    "githubUrl": "https://github.com/amacleod1417/moogic-markets",
    "projectUrl": "https://www.loom.com/share/a9a4f79aa413409eb00fd72cb5f74bc2?sid=796c8706-6d6a-4aed-ae73-357423efb61b",
    "showcaseUrl": "https://ethglobal.com/showcase/cowdao-t36g2"
  },
  {
    "name": "ZK-Loans",
    "tagline": "A protocol for uncollateralized lending, harnessing cross-chain reputation backed by zk-proofs.",
    "description": "ZK Loans is a decentralized protocol that enables users to access collateral-free loans on Rootstock by leveraging a unique combination of on-chain and off-chain zero-knowledge proofs.\n\nThe process begins by verifying off-chain financial data, such as extracting verifiable bank summaries directly from the user‚Äôs email inbox. This is complemented by on-chain proofs, including time travel proofs (which assess historical wallet balances over specific block ranges) and teleport proofs (which evaluate liquidity across multiple blockchain networks).\n\nOnce solvency is established, the user undergoes KYC verification to confirm their identity. All proof components ‚Äî both on-chain and off-chain ‚Äî are aggregated to build a cross-chain reputation score. This reputation is relayed using LayerZero to a smart contract on Ethereum Sepolia, which handles creditworthiness assessment and validation.\n\nFinally, a smart contract on Rootstock executes the disbursement of the approved RBTC loan amount. To ensure legal compliance and auditability, an on-chain attestation is generated that records the hash and signature of the signed legal agreement, while the full document is securely stored off-chain for future reference.",
    "howItsMade": "We built ZK Loans using a Node.js + NestJS backend and a Next.js + React frontend, structured into clear domains to separate concerns between off-chain and on-chain zk-proof generation.\n\nOn the backend, we created:\n\nA dedicated vlayer-contracts folder for handling the smart contract interactions related to VLayer proofs.\n\nA layer-zero folder specifically for managing LayerZero cross-chain messaging, including executor setup, relayer configs, and cross-chain payload formatting.\n\nOn the off-chain side, we used VLayer to extract and verify financial data from user email inboxes (like bank account summaries), generating zk-proofs that convert raw financial evidence into verifiable claims. These provers are called directly from the frontend, which orchestrates user interactions and proof submission.\n\nOn the on-chain side, we integrated VLayer‚Äôs time travel and teleport proofs (checking wallet balances and cross-chain liquidity), and the verifiers for these proofs are handled inside the cross-chain scoring smart contract, ensuring that only valid claims contribute to the reputation score.\n\nWe used LayerZero to relay the aggregated reputation to a smart contract on Ethereum Sepolia, where creditworthiness is validated. Once approved, LayerZero triggers a smart contract on Rootstock to disburse the RBTC loan.\n\nFor legal compliance, we implemented on-chain attestations: we store the hash + signature of the signed legal agreement on-chain, while securely keeping the full document off-chain for future audits.",
    "githubUrl": "https://github.com/LuchoLeonel/zk-loans-eth-global-prague",
    "projectUrl": "https://zk-loans.aichallenge.fun/",
    "showcaseUrl": "https://ethglobal.com/showcase/zk-loans-9se3h"
  }
]
